{"ast":null,"code":"var _jsxFileName = \"/Users/kathyli/Documents/just-kat-kim.nosync/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../styles.css\";\nimport dynamic from \"next/dynamic\";\nimport { TinaEditProvider } from \"tinacms/dist/edit-state\";\nimport { Layout } from \"../components/layout\";\nconst TinaCMS = dynamic(() => import(\"tinacms\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"tinacms\")],\n    modules: [\"tinacms\"]\n  }\n});\nimport { TinaCloudCloudinaryMediaStore } from \"next-tinacms-cloudinary\";\nconst NEXT_PUBLIC_TINA_CLIENT_ID = process.env.NEXT_PUBLIC_TINA_CLIENT_ID;\nconst NEXT_PUBLIC_USE_LOCAL_CLIENT = process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT || 0;\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  var _pageProps$data, _pageProps$data$getGl;\n\n  return __jsx(React.Fragment, null, __jsx(TinaEditProvider, {\n    showEditButton: true,\n    editMode: __jsx(TinaCMS, _extends({\n      branch: \"main\",\n      clientId: NEXT_PUBLIC_TINA_CLIENT_ID,\n      isLocalClient: Boolean(Number(NEXT_PUBLIC_USE_LOCAL_CLIENT)),\n      mediaStore: TinaCloudCloudinaryMediaStore,\n      cmsCallback: cms => {\n        import(\"react-tinacms-editor\").then(({\n          MarkdownFieldPlugin\n        }) => {\n          cms.plugins.add(MarkdownFieldPlugin);\n        });\n      },\n      documentCreatorCallback: {\n        /**\n         * After a new document is created, redirect to its location\n         */\n        onNewDocument: ({\n          collection: {\n            slug\n          },\n          breadcrumbs\n        }) => {\n          const relativeUrl = `/${slug}/${breadcrumbs.join(\"/\")}`;\n          return window.location.href = relativeUrl;\n        },\n\n        /**\n         * Only allows documents to be created to the `Blog Posts` Collection\n         */\n        filterCollections: options => {\n          return options.filter(option => option.label === \"Blog Posts\");\n        }\n      }\n      /**\n       * Treat the Global collection as a global form\n       */\n      ,\n      formifyCallback: ({\n        formConfig,\n        createForm,\n        createGlobalForm\n      }) => {\n        if (formConfig.id === \"getGlobalDocument\") {\n          return createGlobalForm(formConfig);\n        }\n\n        return createForm(formConfig);\n      }\n    }, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }), livePageProps => {\n      var _livePageProps$data, _livePageProps$data$g;\n\n      return __jsx(Layout, {\n        rawData: livePageProps,\n        data: (_livePageProps$data = livePageProps.data) === null || _livePageProps$data === void 0 ? void 0 : (_livePageProps$data$g = _livePageProps$data.getGlobalDocument) === null || _livePageProps$data$g === void 0 ? void 0 : _livePageProps$data$g.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, __jsx(Component, _extends({}, livePageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      })));\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    rawData: pageProps,\n    data: (_pageProps$data = pageProps.data) === null || _pageProps$data === void 0 ? void 0 : (_pageProps$data$getGl = _pageProps$data.getGlobalDocument) === null || _pageProps$data$getGl === void 0 ? void 0 : _pageProps$data$getGl.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kathyli/Documents/just-kat-kim.nosync/pages/_app.js"],"names":["dynamic","TinaEditProvider","Layout","TinaCMS","ssr","TinaCloudCloudinaryMediaStore","NEXT_PUBLIC_TINA_CLIENT_ID","process","env","NEXT_PUBLIC_USE_LOCAL_CLIENT","App","Component","pageProps","Boolean","Number","cms","then","MarkdownFieldPlugin","plugins","add","onNewDocument","collection","slug","breadcrumbs","relativeUrl","join","window","location","href","filterCollections","options","filter","option","label","formConfig","createForm","createGlobalForm","id","livePageProps","data","getGlobalDocument"],"mappings":"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","sourcesContent":["import \"../styles.css\";\nimport dynamic from \"next/dynamic\";\nimport { TinaEditProvider } from \"tinacms/dist/edit-state\";\nimport { Layout } from \"../components/layout\";\nconst TinaCMS = dynamic(() => import(\"tinacms\"), { ssr: false });\nimport { TinaCloudCloudinaryMediaStore } from \"next-tinacms-cloudinary\";\n\nconst NEXT_PUBLIC_TINA_CLIENT_ID = process.env.NEXT_PUBLIC_TINA_CLIENT_ID;\nconst NEXT_PUBLIC_USE_LOCAL_CLIENT =\n  process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT || 0;\n\nconst App = ({ Component, pageProps }) => {\n  return (\n    <>\n      <TinaEditProvider\n        showEditButton={true}\n        editMode={\n          <TinaCMS\n            branch=\"main\"\n            clientId={NEXT_PUBLIC_TINA_CLIENT_ID}\n            isLocalClient={Boolean(Number(NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n            mediaStore={TinaCloudCloudinaryMediaStore}\n            cmsCallback={(cms) => {\n              import(\"react-tinacms-editor\").then(({ MarkdownFieldPlugin }) => {\n                cms.plugins.add(MarkdownFieldPlugin);\n              });\n            }}\n            documentCreatorCallback={{\n              /**\n               * After a new document is created, redirect to its location\n               */\n              onNewDocument: ({ collection: { slug }, breadcrumbs }) => {\n                const relativeUrl = `/${slug}/${breadcrumbs.join(\"/\")}`;\n                return (window.location.href = relativeUrl);\n              },\n              /**\n               * Only allows documents to be created to the `Blog Posts` Collection\n               */\n              filterCollections: (options) => {\n                return options.filter(\n                  (option) => option.label === \"Blog Posts\"\n                );\n              },\n            }}\n            /**\n             * Treat the Global collection as a global form\n             */\n            formifyCallback={({ formConfig, createForm, createGlobalForm }) => {\n              if (formConfig.id === \"getGlobalDocument\") {\n                return createGlobalForm(formConfig);\n              }\n\n              return createForm(formConfig);\n            }}\n            {...pageProps}\n          >\n            {(livePageProps) => (\n              <Layout\n                rawData={livePageProps}\n                data={livePageProps.data?.getGlobalDocument?.data}\n              >\n                <Component {...livePageProps} />\n              </Layout>\n            )}\n          </TinaCMS>\n        }\n      >\n        <Layout\n          rawData={pageProps}\n          data={pageProps.data?.getGlobalDocument?.data}\n        >\n          <Component {...pageProps} />\n        </Layout>\n      </TinaEditProvider>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}