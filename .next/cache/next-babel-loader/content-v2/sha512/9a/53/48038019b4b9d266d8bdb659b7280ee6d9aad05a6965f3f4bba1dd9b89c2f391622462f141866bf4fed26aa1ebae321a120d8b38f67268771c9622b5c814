{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kathyli/Documents/just-kat-kim.nosync/components/blocks/content.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 4.5rem;\\n    font-weight: 400;\\n    line-height: 2;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport styled from 'styled-components';\nimport { HighlighterLink, List, TooltipLink } from '../elements';\nvar Heading = styled.h1(_templateObject());\n_c = Heading;\nvar renderers = {\n  link: function link(_ref) {\n    var node = _ref.node,\n        props = _objectWithoutProperties(_ref, [\"node\"]);\n\n    return props.title ? __jsx(TooltipLink, _extends({\n      \"data-title\": props.title\n    }, props, {\n      title: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    })) : __jsx(HighlighterLink, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }));\n  },\n  list: function list(_ref2) {\n    var node = _ref2.node,\n        props = _objectWithoutProperties(_ref2, [\"node\"]);\n\n    return __jsx(List, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }\n    }));\n  }\n};\nexport var Content = function Content(_ref3) {\n  var data = _ref3.data;\n  return __jsx(React.Fragment, null, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, data.heading), __jsx(Markdown, {\n    renderers: renderers,\n    linkTarget: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data.body));\n};\n_c2 = Content;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"Content\");","map":{"version":3,"sources":["/Users/kathyli/Documents/just-kat-kim.nosync/components/blocks/content.tsx"],"names":["React","Markdown","styled","HighlighterLink","List","TooltipLink","Heading","h1","renderers","link","node","props","title","list","Content","data","heading","body"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,WAAhC,QAAmD,aAAnD;AAMA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,EAAV,mBAAb;KAAMD,O;AAMN,IAAME,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,oBAAwB;AAAA,QAArBC,IAAqB,QAArBA,IAAqB;AAAA,QAAZC,KAAY;;AAC1B,WAAOA,KAAK,CAACC,KAAN,GACH,MAAC,WAAD;AAAa,oBAAYD,KAAK,CAACC;AAA/B,OAA0CD,KAA1C;AAAiD,MAAA,KAAK,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,GAGH,MAAC,eAAD,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAKH,GAPa;AAQdE,EAAAA,IAAI,EAAE;AAAA,QAAGH,IAAH,SAAGA,IAAH;AAAA,QAAYC,KAAZ;;AAAA,WAAwB,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;AAAA;AARQ,CAAlB;AAWA,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SACnB,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUA,IAAI,CAACC,OAAf,CADJ,EAEI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAER,SAArB;AAAgC,IAAA,UAAU,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,IAAI,CAACE,IADV,CAFJ,CADmB;AAAA,CAAhB;MAAMH,O","sourcesContent":["import React from 'react'\nimport Markdown from 'react-markdown'\nimport styled from 'styled-components'\nimport { PagesBlocksContent } from '../../.tina/__generated__/types'\nimport { HighlighterLink, List, TooltipLink } from '../elements'\n\ninterface IContent {\n    data: PagesBlocksContent\n}\n\nconst Heading = styled.h1`\n    font-size: 4.5rem;\n    font-weight: 400;\n    line-height: 2;\n`\n\nconst renderers = {\n    link: ({ node, ...props }) => {\n        return props.title ? (\n            <TooltipLink data-title={props.title} {...props} title=\"\" />\n        ) : (\n            <HighlighterLink {...props} />\n        )\n    },\n    list: ({ node, ...props }) => <List {...props} />,\n}\n\nexport const Content = ({ data }: IContent) => (\n    <>\n        <Heading>{data.heading}</Heading>\n        <Markdown renderers={renderers} linkTarget=\"_blank\">\n            {data.body}\n        </Markdown>\n    </>\n)\n"]},"metadata":{},"sourceType":"module"}