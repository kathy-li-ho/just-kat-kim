{"ast":null,"code":"var _jsxFileName = \"/Users/kathyli/Documents/just-kat-kim.nosync/components/layout/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { Header } from '../header';\nimport { Footer } from '../footer';\nimport layoutData from '../../content/global/index.json';\nimport { SiteMain } from './styles';\nexport const Layout = ({\n  data = layoutData,\n  children\n}) => __jsx(React.Fragment, null, __jsx(Head, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, __jsx(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, \"Just Kat Kim\"), __jsx(\"meta\", {\n  name: \"viewport\",\n  content: \"initial-scale=1.0, width=device-width\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}), __jsx(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}), __jsx(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}), __jsx(\"link\", {\n  href: \"https://fonts.googleapis.com/css?family=Abel&display=swap\",\n  rel: \"stylesheet\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n}), __jsx(\"link\", {\n  href: \"https://fonts.googleapis.com/css?family=Special+Elite&display=swap\",\n  rel: \"stylesheet\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n})), __jsx(Header, {\n  data: data === null || data === void 0 ? void 0 : data.header,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}), __jsx(SiteMain, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, children), __jsx(Footer, {\n  data: data === null || data === void 0 ? void 0 : data.footer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}));\nexport const layoutQueryFragment = `\n  getGlobalDocument(relativePath: \"index.json\") {\n    data {\n      header {\n        nav {\n          href\n          label\n        }\n      }\n      footer {\n        social {\n          gmail {\n            handle\n            link\n          }\n          instagram {\n            handle\n            link\n          }\n          imdb {\n            handle\n            link\n          }\n        }\n      }  \n    }\n  }\n`;","map":{"version":3,"sources":["/Users/kathyli/Documents/just-kat-kim.nosync/components/layout/index.tsx"],"names":["React","Head","Header","Footer","layoutData","SiteMain","Layout","data","children","header","footer","layoutQueryFragment"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,SAAQC,QAAR,QAAuB,UAAvB;AAUA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,GAAGH,UAAR;AAAoBI,EAAAA;AAApB,CAAD,KAClB,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACI,EAAA,IAAI,EAAC,UADT;AAEI,EAAA,OAAO,EAAC,uCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAMI;AAAM,EAAA,GAAG,EAAC,YAAV;AAAuB,EAAA,IAAI,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,EAOI;AAAM,EAAA,GAAG,EAAC,YAAV;AAAuB,EAAA,IAAI,EAAC,2BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPJ,EAQI;AACI,EAAA,IAAI,EAAC,2DADT;AAEI,EAAA,GAAG,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EAYI;AACI,EAAA,IAAI,EAAC,oEADT;AAEI,EAAA,GAAG,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAZJ,CADJ,EAkBI,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAED,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAlBJ,EAmBI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAWD,QAAX,CAnBJ,EAoBI,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAED,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApBJ,CADG;AAyBP,OAAO,MAAMC,mBAAmB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport {Header} from '../header';\nimport {Footer} from '../footer';\nimport layoutData from '../../content/global/index.json';\nimport {GlobalFooter, GlobalHeader} from '../../.tina/__generated__/types';\nimport {SiteMain} from './styles';\n\ninterface ILayout {\n    children: React.ReactNode;\n    data?: {\n        header: GlobalHeader;\n        footer: GlobalFooter;\n    };\n}\n\nexport const Layout = ({data = layoutData, children}: ILayout) => (\n    <>\n        <Head>\n            <title>Just Kat Kim</title>\n            <meta\n                name=\"viewport\"\n                content=\"initial-scale=1.0, width=device-width\"\n            />\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n            <link\n                href=\"https://fonts.googleapis.com/css?family=Abel&display=swap\"\n                rel=\"stylesheet\"\n            />\n            <link\n                href=\"https://fonts.googleapis.com/css?family=Special+Elite&display=swap\"\n                rel=\"stylesheet\"\n            />\n        </Head>\n        <Header data={data?.header} />\n        <SiteMain>{children}</SiteMain>\n        <Footer data={data?.footer} />\n    </>\n);\n\nexport const layoutQueryFragment = `\n  getGlobalDocument(relativePath: \"index.json\") {\n    data {\n      header {\n        nav {\n          href\n          label\n        }\n      }\n      footer {\n        social {\n          gmail {\n            handle\n            link\n          }\n          instagram {\n            handle\n            link\n          }\n          imdb {\n            handle\n            link\n          }\n        }\n      }  \n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}