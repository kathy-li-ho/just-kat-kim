{"ast":null,"code":"var _jsxFileName = \"/Users/kathyli/Documents/just-kat-kim.nosync/components/blocks/content.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport styled from 'styled-components';\nimport { HighlighterLink, List, TooltipLink } from '../elements';\nconst Heading = styled.h1`\n    font-size: 4.5rem;\n    font-weight: 400;\n    line-height: 2;\n`;\nconst renderers = {\n  link: (_ref) => {\n    let {\n      node\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"node\"]);\n\n    return props.title ? __jsx(TooltipLink, _extends({\n      \"data-title\": props.title\n    }, props, {\n      title: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    })) : __jsx(HighlighterLink, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }));\n  },\n  list: (_ref2) => {\n    let {\n      node\n    } = _ref2,\n        props = _objectWithoutProperties(_ref2, [\"node\"]);\n\n    return __jsx(List, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }\n    }));\n  }\n};\nexport const Content = ({\n  data\n}) => __jsx(React.Fragment, null, __jsx(Heading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, data.heading), __jsx(Markdown, {\n  renderers: renderers,\n  linkTarget: \"_blank\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, data.body));","map":{"version":3,"sources":["/Users/kathyli/Documents/just-kat-kim.nosync/components/blocks/content.tsx"],"names":["React","Markdown","styled","HighlighterLink","List","TooltipLink","Heading","h1","renderers","link","node","props","title","list","Content","data","heading","body"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,WAAhC,QAAmD,aAAnD;AAMA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,EAAG;AAC1B;AACA;AACA;AACA,CAJA;AAMA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,UAAwB;AAAA,QAAvB;AAAEC,MAAAA;AAAF,KAAuB;AAAA,QAAZC,KAAY;;AAC1B,WAAOA,KAAK,CAACC,KAAN,GACH,MAAC,WAAD;AAAa,oBAAYD,KAAK,CAACC;AAA/B,OAA0CD,KAA1C;AAAiD,MAAA,KAAK,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,GAGH,MAAC,eAAD,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAKH,GAPa;AAQdE,EAAAA,IAAI,EAAE;AAAA,QAAC;AAAEH,MAAAA;AAAF,KAAD;AAAA,QAAYC,KAAZ;;AAAA,WAAwB,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;AAAA;AARQ,CAAlB;AAWA,OAAO,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnB,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAUA,IAAI,CAACC,OAAf,CADJ,EAEI,MAAC,QAAD;AAAU,EAAA,SAAS,EAAER,SAArB;AAAgC,EAAA,UAAU,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKO,IAAI,CAACE,IADV,CAFJ,CADG","sourcesContent":["import React from 'react'\nimport Markdown from 'react-markdown'\nimport styled from 'styled-components'\nimport { PagesBlocksContent } from '../../.tina/__generated__/types'\nimport { HighlighterLink, List, TooltipLink } from '../elements'\n\ninterface IContent {\n    data: PagesBlocksContent\n}\n\nconst Heading = styled.h1`\n    font-size: 4.5rem;\n    font-weight: 400;\n    line-height: 2;\n`\n\nconst renderers = {\n    link: ({ node, ...props }) => {\n        return props.title ? (\n            <TooltipLink data-title={props.title} {...props} title=\"\" />\n        ) : (\n            <HighlighterLink {...props} />\n        )\n    },\n    list: ({ node, ...props }) => <List {...props} />,\n}\n\nexport const Content = ({ data }: IContent) => (\n    <>\n        <Heading>{data.heading}</Heading>\n        <Markdown renderers={renderers} linkTarget=\"_blank\">\n            {data.body}\n        </Markdown>\n    </>\n)\n"]},"metadata":{},"sourceType":"module"}