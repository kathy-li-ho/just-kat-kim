{"ast":null,"code":"var _jsxFileName = \"/Users/kathyli/Documents/just-kat-kim.nosync/components/header/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { HeaderWrapper, MenuButton, Nav, NavLabel, Stamp } from './styles';\nimport { MenuIcon } from '../../assets/svgs';\nexport var Header = function Header(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      toggleMenu = _useState[0],\n      setToggleMenu = _useState[1];\n\n  return __jsx(HeaderWrapper, {\n    isOpaque: toggleMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(MenuButton, {\n    onClick: function onClick() {\n      return setToggleMenu(!toggleMenu);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(MenuIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(Stamp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"meow.\")), __jsx(Nav, {\n    isOpen: toggleMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, data.nav && data.nav.map(function (item, i) {\n    var route = router.asPath === '/' ? 'home' : router.asPath || 'home';\n    var href = item.href || 'home';\n    var activeItem = route.includes(href);\n    return __jsx(Link, {\n      href: \"/\".concat(item.href || 'home'),\n      key: \"\".concat(item.label, \"-\").concat(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, __jsx(NavLabel, {\n      isActive: activeItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, item.label));\n  })));\n};\n\n_s(Header, \"fLA7TiDfWTHbsqtQ4AW6qB0VL2g=\", false, function () {\n  return [useRouter];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/kathyli/Documents/just-kat-kim.nosync/components/header/index.tsx"],"names":["React","useState","Link","useRouter","HeaderWrapper","MenuButton","Nav","NavLabel","Stamp","MenuIcon","Header","data","router","toggleMenu","setToggleMenu","nav","map","item","i","route","asPath","href","activeItem","includes","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,GAApC,EAAyCC,QAAzC,EAAmDC,KAAnD,QAAgE,UAAhE;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAOA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAuB;AAAA;;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AACzC,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AADyC,kBAELF,QAAQ,CAAC,KAAD,CAFH;AAAA,MAElCY,UAFkC;AAAA,MAEtBC,aAFsB;;AAIzC,SACI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAED,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMC,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJJ,EAOI,MAAC,GAAD;AAAK,IAAA,MAAM,EAAEA,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACI,GAAL,IACGJ,IAAI,CAACI,GAAL,CAASC,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,QAAMC,KAAK,GACPP,MAAM,CAACQ,MAAP,KAAkB,GAAlB,GACM,MADN,GAEMR,MAAM,CAACQ,MAAP,IAAiB,MAH3B;AAIA,QAAMC,IAAI,GAAGJ,IAAI,CAACI,IAAL,IAAa,MAA1B;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACI,QAAN,CAAeF,IAAf,CAAnB;AACA,WACI,MAAC,IAAD;AACI,MAAA,IAAI,aAAMJ,IAAI,CAACI,IAAL,IAAa,MAAnB,CADR;AAEI,MAAA,GAAG,YAAKJ,IAAI,CAACO,KAAV,cAAmBN,CAAnB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAEI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,IAAI,CAACO,KADV,CAJJ,CADJ;AAUH,GAjBD,CAFR,CAPJ,CADJ;AA+BH,CAnCM;;GAAMd,M;UACMP,S;;;KADNO,M","sourcesContent":["import React, { useState } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { HeaderWrapper, MenuButton, Nav, NavLabel, Stamp } from './styles'\nimport { MenuIcon } from '../../assets/svgs'\nimport { GlobalHeader } from '../../.tina/__generated__/types'\n\ninterface IHeader {\n    data: GlobalHeader\n}\n\nexport const Header = ({ data }: IHeader) => {\n    const router = useRouter()\n    const [toggleMenu, setToggleMenu] = useState(false)\n\n    return (\n        <HeaderWrapper isOpaque={toggleMenu}>\n            <MenuButton onClick={() => setToggleMenu(!toggleMenu)}>\n                <MenuIcon />\n            </MenuButton>\n            <Link href=\"/\" passHref>\n                <Stamp>meow.</Stamp>\n            </Link>\n            <Nav isOpen={toggleMenu}>\n                {data.nav &&\n                    data.nav.map((item, i) => {\n                        const route =\n                            router.asPath === '/'\n                                ? 'home'\n                                : router.asPath || 'home'\n                        const href = item.href || 'home'\n                        const activeItem = route.includes(href)\n                        return (\n                            <Link\n                                href={`/${item.href || 'home'}`}\n                                key={`${item.label}-${i}`}\n                            >\n                                <NavLabel isActive={activeItem}>\n                                    {item.label}\n                                </NavLabel>\n                            </Link>\n                        )\n                    })}\n            </Nav>\n        </HeaderWrapper>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}